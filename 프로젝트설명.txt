# 🏆 종합평가시스템 (Comprehensive Evaluation System)

공정하고 투명한 평가 프로세스를 위한 웹 기반 평가 시스템입니다.

![System Overview](https://via.placeholder.com/800x400/2563eb/ffffff?text=Comprehensive+Evaluation+System)

## ✨ 주요 기능

### 👥 **역할 분리**
- **관리자**: 시스템 설정, 사용자 관리, 결과 집계
- **평가위원**: 대상자별 채점 및 평가
- **공개 결과**: 투명한 결과 공개

### 📊 **핵심 특징**
- ✅ **엑셀 기반 관리**: 평가위원, 대상자, 평가항목 일괄 업로드
- ✅ **카테고리별 평가**: A그룹, B그룹 등 체계적 분류
- ✅ **실시간 진행률**: 채점 현황 실시간 모니터링
- ✅ **자동 결과 집계**: 순위 자동 계산 및 통계 생성
- ✅ **보고서 출력**: 엑셀 형태 상세 보고서
- ✅ **반응형 디자인**: 모바일, 태블릿, 데스크톱 지원

## 🚀 기술 스택

### Frontend
- **React 18** + **TypeScript**
- **Tailwind CSS** - 스타일링
- **React Router** - 라우팅
- **React Hook Form** - 폼 관리
- **Lucide React** - 아이콘
- **React Hot Toast** - 알림
- **XLSX** - 엑셀 파일 처리

### Backend & Database
- **Supabase** - 백엔드 서비스
- **PostgreSQL** - 데이터베이스
- **Row Level Security** - 보안

### 배포
- **Vercel** - 프론트엔드 배포
- **Supabase** - 데이터베이스 호스팅

## 📋 시스템 요구사항

- **Node.js** 18.0.0 이상
- **npm** 또는 **yarn**
- **Modern Browser** (Chrome, Firefox, Safari, Edge)

## 🛠️ 설치 및 설정

### 1. 프로젝트 클론
```bash
git clone https://github.com/your-username/comprehensive-evaluation-system.git
cd comprehensive-evaluation-system
```

### 2. 의존성 설치
```bash
npm install
# 또는
yarn install
```

### 3. 환경변수 설정

프로젝트 루트에 `.env` 파일을 생성하고 다음 내용을 입력하세요:

```env
# Supabase 설정
VITE_SUPABASE_URL=https://your-project-id.supabase.co
VITE_SUPABASE_ANON_KEY=your-anon-key-here

# 개발 환경 설정
VITE_APP_ENV=development
```

#### Supabase 프로젝트 설정 방법:
1. [Supabase](https://supabase.com)에서 새 프로젝트 생성
2. 프로젝트 대시보드 → Settings → API
3. Project URL과 anon public key 복사
4. 위의 `.env` 파일에 붙여넣기

⚠️ **중요**: `.env` 파일은 절대 Git에 커밋하지 마세요!

### 4. Supabase 데이터베이스 설정

#### 4.1 Supabase 프로젝트 생성
1. [Supabase](https://supabase.com)에서 새 프로젝트 생성
2. 프로젝트 설정에서 URL과 anon key 복사

#### 4.2 데이터베이스 스키마 생성
Supabase SQL 편집기에서 다음 스크립트 실행:

```sql
-- 제공된 database_schema.sql 파일의 내용을 복사하여 실행
-- (위에서 생성한 SQL 스키마)
```

#### 4.3 Row Level Security 설정
```sql
-- RLS 정책들도 함께 실행
-- (데이터베이스 스키마에 포함됨)
```

### 5. 개발 서버 실행
```bash
npm run dev
# 또는
yarn dev
```

브라우저에서 `http://localhost:3000` 접속

### 6. 초기 관리자 계정
기본 관리자 계정:
- **사용자명**: `admin`
- **비밀번호**: `admin123`

⚠️ **운영 환경에서는 반드시 비밀번호를 변경하세요!**

## 📚 사용 가이드

### 🔑 로그인 방법

#### 관리자 로그인
1. 메인 페이지에서 "관리자 로그인" 클릭
2. 사용자명과 비밀번호 입력
3. 관리자 대시보드 접근

#### 평가위원 로그인
1. 메인 페이지에서 "평가위원 로그인" 클릭
2. 드롭다운에서 이름 선택
3. 비밀번호 입력
4. 채점 인터페이스 접근

### 📊 관리자 기능

#### 1. 평가위원 관리
- **개별 등록**: 폼을 통한 개별 등록
- **엑셀 업로드**: 대량 등록 (템플릿 제공)
- **정보 수정**: 이름, 부서, 비밀번호 등 수정
- **활성화 관리**: 로그인 허용/차단

#### 2. 평가 대상자 관리
- **개별 등록**: 이름, 부서, 직책, 카테고리 등
- **엑셀 업로드**: 대량 등록
- **순서 관리**: 표시 순서 조정

#### 3. 평가항목 관리
- **카테고리 관리**: A그룹, B그룹 등 대분류
- **세부항목 관리**: 각 카테고리별 세부 평가항목
- **배점 설정**: 항목별 최대 점수 및 가중치
- **엑셀 업로드**: 항목 일괄 등록

#### 4. 결과 관리
- **실시간 현황**: 채점 진행률 모니터링
- **순위 집계**: 자동 순위 계산
- **보고서 생성**: 엑셀 형태 상세 보고서
- **통계 분석**: 카테고리별, 평가위원별 분석

### ✅ 평가위원 기능

#### 1. 대시보드
- **진행 현황**: 전체 채점 진행률 확인
- **대상자 목록**: 채점 대상자 리스트
- **상태 표시**: 미시작/진행중/완료 구분

#### 2. 채점 인터페이스
- **카테고리별 구성**: 체계적인 평가 구조
- **실시간 저장**: 자동 임시저장
- **진행률 표시**: 시각적 진행률 확인
- **의견 입력**: 항목별 세부 의견 작성

#### 3. 제출 및 확인
- **최종 제출**: 모든 항목 완료 후 제출
- **수정 불가**: 제출 후 수정 불가 (공정성 보장)
- **결과 확인**: 본인이 채점한 결과 조회

## 📊 엑셀 업로드 가이드

### 평가위원 업로드 템플릿
| 이름 | 이메일 | 부서 | 비밀번호 |
|------|--------|------|----------|
| 홍길동 | hong@example.com | 기획실 | password123 |
| 김평가 | kim@example.com | 총무과 | password456 |

### 평가 대상자 업로드 템플릿
| 이름 | 부서 | 직책 | 카테고리 | 설명 | 순서 |
|------|------|------|----------|------|------|
| 최대상 | 문화관광과 | 주무관 | 최대상 | 우수 공무원 후보자 | 1 |
| 강대상 | 문화관광과 | 주무관 | 강대상 | 우수 공무원 후보자 | 2 |

### 평가항목 업로드 템플릿
| 카테고리코드 | 카테고리명 | 항목코드 | 항목명 | 설명 | 최대점수 | 가중치 | 순서 |
|--------------|------------|----------|--------|------|----------|--------|------|
| A | 기술이해도 | A1 | 통돌OS 사업 운영 계획서 검토 | 세부 설명 | 30 | 1.0 | 1 |
| A | 기술이해도 | A2 | 서비스 개선안 도출 | 세부 설명 | 30 | 1.0 | 2 |

## 🔧 커스터마이징

### 테마 변경
`tailwind.config.js`에서 색상 테마 수정:
```javascript
theme: {
  extend: {
    colors: {
      primary: {
        // 원하는 색상으로 변경
      }
    }
  }
}
```

### 평가 항목 구조 변경
1. 관리자 페이지에서 카테고리 관리
2. 각 카테고리별 세부 항목 설정
3. 배점 및 가중치 조정

### 보고서 템플릿 수정
`pages/admin/ResultsManagement.tsx`에서 엑셀 출력 형식 수정

## 🚀 배포

### Vercel 배포
1. [Vercel](https://vercel.com)에 가입
2. GitHub 연동
3. 프로젝트 import
4. 환경변수 설정
5. 자동 배포

### 환경변수 설정 (Vercel)
```
REACT_APP_SUPABASE_URL=your-supabase-url
REACT_APP_SUPABASE_ANON_KEY=your-anon-key
```

## 🛡️ 보안 고려사항

### 데이터 보호
- ✅ Row Level Security 적용
- ✅ 비밀번호 해싱 (운영시 bcrypt 사용 권장)
- ✅ 역할 기반 접근 제어
- ✅ API 키 환경변수 분리

### 권장 보안 설정
1. **비밀번호 정책**: 8자 이상, 특수문자 포함
2. **세션 관리**: 자동 로그아웃 (선택사항)
3. **데이터 백업**: 정기적 백업 수행
4. **HTTPS 사용**: 운영 환경에서 필수

## 🐛 문제 해결

### 자주 발생하는 문제

#### 1. Supabase 연결 오류
```
Error: Invalid API URL or key
```
**해결방법**: `.env` 파일의 URL과 키 확인

#### 2. 엑셀 업로드 실패
```
Error: File parsing failed
```
**해결방법**: 
- 파일 형식 확인 (.xlsx, .xls)
- 템플릿 컬럼명 정확히 입력
- 한글 인코딩 확인

#### 3. 권한 오류
```
Error: Row Level Security violation
```
**해결방법**: Supabase RLS 정책 확인

### 디버깅
개발 모드에서 브라우저 콘솔 확인:
```javascript
// 디버그 모드 활성화
localStorage.setItem('debug', 'true');
```

## 📞 지원 및 기여

### 이슈 리포트
GitHub Issues를 통해 버그 리포트나 기능 요청

### 기여 방법
1. Fork 프로젝트
2. Feature 브랜치 생성
3. 변경사항 커밋
4. Pull Request 생성

## 📄 라이선스

MIT License - 자세한 내용은 [LICENSE](LICENSE) 파일 참조

## 🙏 감사의 말

이 프로젝트는 다음 오픈소스 라이브러리들을 사용합니다:
- React & TypeScript
- Tailwind CSS
- Supabase
- Lucide React
- 그 외 많은 오픈소스 프로젝트들

---

## 📊 시스템 아키텍처

```
┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐
│   사용자 브라우저   │    │   Vercel (호스팅)   │    │  Supabase (백엔드)  │
│                 │    │                 │    │                 │
│ • 관리자 대시보드   │◄──►│ • React 앱      │◄──►│ • PostgreSQL    │
│ • 평가위원 인터페이스│    │ • 정적 파일 서빙   │    │ • Row Level Security│
│ • 공개 결과 페이지  │    │ • 자동 배포       │    │ • 실시간 API     │
└─────────────────┘    └─────────────────┘    └─────────────────┘
```

**🎯 현재 버전: v1.0.0**  
**🔧 마지막 업데이트: 2025년 6월**
